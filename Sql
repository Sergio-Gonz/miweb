-- =============================================== -- SCRIPT COMPLETO: CONSOLIDADO ACTIVOS, PASIVOS Y CDA -- Objetivo: Calcular variaciones mensuales de activos y pasivos, integrando saldos vencidos de CDA -- Compatible con SQL Server Management Studio (SSMS) -- ===============================================

-- 1. USO DE BASE DE DATOS USE AT_BCO; GO

-- =============================================== -- 2. CARGA DE TABLAS BASE TEMPORALES (ACTUALES) -- =============================================== -- 2.1 Monedas DROP TABLE IF EXISTS DBO.monedas_TMP; SELECT * INTO DBO.monedas_TMP FROM DBO.CORPDW_monedas WITH (NOLOCK);

-- 2.2 Agencias DROP TABLE IF EXISTS DBO.agencias_TMP; SELECT * INTO DBO.agencias_TMP FROM DBO.CORPDW_agencias WITH (NOLOCK);

-- 2.3 Parámetros del mes actual DROP TABLE IF EXISTS DBO.parametros_TMP; SELECT * INTO DBO.parametros_TMP FROM DBO.CORPDW_PARAMETROS WITH (NOLOCK) WHERE fecha_cierre = CAST(GETDATE() AS DATE);

-- 2.4 Clientes actuales DROP TABLE IF EXISTS DBO.CLIENTESIB_HIST_TMP; SELECT c.fecha_cierre, c.nro_cliente, c.nombre_cliente, c.segmento_gerente, c.nombre_gerente, c.cod_gerente_num, c.agencia_gerente INTO DBO.CLIENTESIB_HIST_TMP FROM DBO.CORPDW_CLIENTESIB_HIST c WITH (NOLOCK) WHERE c.fecha_cierre = CAST(GETDATE() AS DATE);

-- 2.5 Activos actuales DROP TABLE IF EXISTS DBO.V_OP_ACTIVO_PROCESADO_SAS_TMP; SELECT * INTO DBO.V_OP_ACTIVO_PROCESADO_SAS_TMP FROM DBO.CORPDW_V_OP_ACTIVO_PROCESADO_SAS WITH (NOLOCK) WHERE fecha_cierre = CAST(GETDATE() AS DATE);

-- 2.6 Pasivos actuales DROP TABLE IF EXISTS DBO.V_OP_PASIVO_PROCESADO_SAS_TMP; SELECT * INTO DBO.V_OP_PASIVO_PROCESADO_SAS_TMP FROM DBO.CORPDW_V_OP_PASIVO_PROCESADO_SAS WITH (NOLOCK) WHERE fecha_cierre = CAST(GETDATE() AS DATE);

-- =============================================== -- 3. DECLARACIÓN DE FECHA MES ANTERIOR -- =============================================== DECLARE @Fecha_Ant DATE = '2025-03-31';  -- Ajustable GO

-- =============================================== -- 4. CARGA DE TABLAS TEMPORALES (MES ANTERIOR) -- =============================================== -- 4.1 Parámetros anteriores DROP TABLE IF EXISTS DBO.parametros_ant_TMP; SELECT * INTO DBO.parametros_ant_TMP FROM DBO.CORPDW_PARAMETROS WITH (NOLOCK) WHERE fecha_cierre = @Fecha_Ant;

-- 4.2 Clientes anteriores DROP TABLE IF EXISTS DBO.CLIENTESIB_HIST_ANT_TMP; SELECT c.fecha_cierre, c.nro_cliente, c.nombre_cliente, c.segmento_gerente, c.nombre_gerente, c.cod_gerente_num, c.agencia_gerente INTO DBO.CLIENTESIB_HIST_ANT_TMP FROM DBO.CORPDW_CLIENTESIB_HIST c WITH (NOLOCK) WHERE c.fecha_cierre = @Fecha_Ant;

-- 4.3 Activos anteriores DROP TABLE IF EXISTS DBO.V_OP_ACTIVO_PROCESADO_SAS_ANT_TMP; SELECT * INTO DBO.V_OP_ACTIVO_PROCESADO_SAS_ANT_TMP FROM DBO.CORPDW_V_OP_ACTIVO_PROCESADO_SAS WITH (NOLOCK) WHERE fecha_cierre = @Fecha_Ant;

-- 4.4 Pasivos anteriores DROP TABLE IF EXISTS DBO.V_OP_PASIVO_PROCESADO_SAS_ANT_TMP; SELECT * INTO DBO.V_OP_PASIVO_PROCESADO_SAS_ANT_TMP FROM DBO.CORPDW_V_OP_PASIVO_PROCESADO_SAS WITH (NOLOCK) WHERE fecha_cierre = @Fecha_Ant;

-- =============================================== -- SIGUE EN LA SIGUIENTE SECCIÓN... -- [Continuará con cálculo de saldos activos, pasivos y CDA] -- ===============================================
-- ============================================ -- 3.3 Variación consolidada de activos (segmento Q) -- ============================================

-- Clientes con saldo en el mes actual (Q) DROP TABLE IF EXISTS DBO.VAR_PUNTA_ACTIVOS_ACT; SELECT t1.fecha_cierre, t2.fecha_cierre AS fecha_cierre_ant, t1.cartera, t1.agencia, t1.cod_gerente_num AS cod_gte_actual, t1.nombre_gerente AS gerente_actual, t1.nro_cliente, t1.nombre_cliente, t1.segmento_gerente, t1.saldo_punta_pyg AS saldo_punta_pyg_act, t1.segmento_ACTPR, t3.cod_gerente_num AS cod_gerente_ant, t3.nombre_gerente AS gerente_ant, t3.segmento_gerente AS segmento_ant, t2.segmento_ACTPR AS segmento_ACTPR_ant, t2.saldo_punta_pyg AS saldo_punta_pyg_ant, -- Variación absoluta y descripción ISNULL(t1.saldo_punta_pyg, 0) - ISNULL(t2.saldo_punta_pyg, 0) AS variacion, CASE WHEN ISNULL(t1.saldo_punta_pyg, 0) - ISNULL(t2.saldo_punta_pyg, 0) > 0 THEN 'Aumentó' WHEN ISNULL(t1.saldo_punta_pyg, 0) - ISNULL(t2.saldo_punta_pyg, 0) < 0 THEN 'Disminuyó' ELSE 'Mantiene' END AS desc_variacion INTO DBO.VAR_PUNTA_ACTIVOS_ACT FROM DBO.Punta_Activos_Act_F t1 LEFT JOIN DBO.Punta_Activos_Ant_F t2 ON t1.nro_cliente = t2.nro_cliente LEFT JOIN DBO.CLIENTESIB_HIST_ANT_TMP t3 ON t1.nro_cliente = t3.nro_cliente WHERE t1.segmento_ACTPR = 'Q' OR t2.segmento_ACTPR = 'Q';

-- Clientes con saldo en el mes anterior (Q) pero no en el actual DROP TABLE IF EXISTS DBO.VAR_PUNTA_ACTIVOS_ANT; SELECT t3.fecha_cierre, t2.fecha_cierre AS fecha_cierre_ant, t1.cartera, t1.agencia, t3.cod_gerente_num AS cod_gte_actual, t3.nombre_gerente AS gerente_actual, t2.nro_cliente, t2.nombre_cliente, t3.segmento_gerente, t1.saldo_punta_pyg AS saldo_punta_pyg_act, t1.segmento_ACTPR, t2.cod_gerente_num AS cod_gerente_ant, t2.nombre_gerente AS gerente_ant, t2.segmento_gerente AS segmento_ant, t2.segmento_ACTPR AS segmento_ACTPR_ant, t2.saldo_punta_pyg AS saldo_punta_pyg_ant, -- Variación absoluta y descripción ISNULL(t1.saldo_punta_pyg, 0) - ISNULL(t2.saldo_punta_pyg, 0) AS variacion, CASE WHEN ISNULL(t1.saldo_punta_pyg, 0) - ISNULL(t2.saldo_punta_pyg, 0) > 0 THEN 'Aumentó' WHEN ISNULL(t1.saldo_punta_pyg, 0) - ISNULL(t2.saldo_punta_pyg, 0) < 0 THEN 'Disminuyó' ELSE 'Mantiene' END AS desc_variacion INTO DBO.VAR_PUNTA_ACTIVOS_ANT FROM DBO.Punta_Activos_Act_F t1 RIGHT JOIN DBO.Punta_Activos_Ant_F t2 ON t1.nro_cliente = t2.nro_cliente LEFT JOIN DBO.CLIENTESIB_HIST_TMP t3 ON t2.nro_cliente = t3.nro_cliente WHERE (t1.segmento_ACTPR NOT IN ('Q') AND t2.segmento_ACTPR = 'Q') AND t1.agencia IS NULL;

-- Unión final de activos con descripción de variación DROP TABLE IF EXISTS DBO.A_VAR_PUNTA_ACTIVOS_Q; SELECT * INTO DBO.A_VAR_PUNTA_ACTIVOS_Q FROM ( SELECT * FROM DBO.VAR_PUNTA_ACTIVOS_ACT UNION ALL SELECT * FROM DBO.VAR_PUNTA_ACTIVOS_ANT ) AS union_activos;

-- ============================================== -- INTEGRACIÓN CDA: Saldos Vencidos del mes actual y anterior -- ==============================================

-- Conversión a guaraníes y marca de vencimiento para CDA actual DROP TABLE IF EXISTS DBO.A_Cant_CDA_FINAL; SELECT *, CASE WHEN id_moneda = 6900 THEN t_saldo_punta WHEN id_moneda = 1 THEN t_saldo_punta * tipo_cambio WHEN id_moneda = 62 THEN t_saldo_punta * tipo_cambio_eu ELSE 0 END AS saldo_punta_act_pyg, CASE WHEN fecha_vto <= @FECHA_CIERRE THEN 'SI' ELSE 'NO' END AS suma INTO DBO.A_Cant_CDA_FINAL FROM DBO.A_Cant_CDA_TMP;

-- Conversión a guaraníes y marca de vencimiento para CDA anterior DROP TABLE IF EXISTS DBO.A_Cant_CDA_FINAL_ANT; SELECT *, CASE WHEN id_moneda = 6900 THEN t_saldo_punta WHEN id_moneda = 1 THEN t_saldo_punta * tipo_cambio WHEN id_moneda = 62 THEN t_saldo_punta * tipo_cambio_eu ELSE 0 END AS saldo_punta_act_pyg, CASE WHEN fecha_vto <= @FECHA_ANT THEN 'SI' ELSE 'NO' END AS suma INTO DBO.A_Cant_CDA_FINAL_ANT FROM DBO.A_Cant_CDA_TMP_ANT;

-- Comparación CDA por cliente y operación DROP TABLE IF EXISTS DBO.VAR_CDA_TMP; SELECT COALESCE(act.nro_cliente, ant.nro_cliente) AS nro_cliente, COALESCE(act.nombre_cliente, ant.nombre_cliente) AS nombre_cliente, COALESCE(act.nro_operacion, ant.nro_operacion) AS nro_operacion, COALESCE(act.cod_gerente_num, ant.cod_gerente_num) AS cod_gte_actual, COALESCE(act.nombre_gerente, ant.nombre_gerente) AS gerente_actual, ant.cod_gerente_num AS cod_gerente_ant, ant.nombre_gerente AS gerente_ant, ISNULL(act.saldo_punta_act_pyg, 0) AS saldo_punta_act_pyg, ISNULL(ant.saldo_punta_act_pyg, 0) AS saldo_punta_ant_pyg, ISNULL(act.saldo_punta_act_pyg, 0) - ISNULL(ant.saldo_punta_act_pyg, 0) AS variacion, CASE WHEN ISNULL(act.saldo_punta_act_pyg, 0) - ISNULL(ant.saldo_punta_act_pyg, 0) > 0 THEN 'Aumentó' WHEN ISNULL(act.saldo_punta_act_pyg, 0) - ISNULL(ant.saldo_punta_act_pyg, 0) < 0 THEN 'Disminuyó' ELSE 'Mantiene' END AS desc_variacion, act.fecha_cierre AS fecha_cierre_act, ant.fecha_cierre AS fecha_cierre_ant, act.fecha_vto AS fecha_vto_act, ant.fecha_vto AS fecha_vto_ant, act.suma AS suma_act, ant.suma AS suma_ant INTO DBO.VAR_CDA_TMP FROM DBO.A_Cant_CDA_FINAL act FULL OUTER JOIN DBO.A_Cant_CDA_FINAL_ANT ant ON act.nro_cliente = ant.nro_cliente AND act.nro_operacion = ant.nro_operacion;

-- Consolidado de saldos vencidos CDA por cliente DROP TABLE IF EXISTS DBO.REPORTE_CDA_TMP; SELECT nro_cliente, SUM(CASE WHEN suma_act = 'SI' THEN saldo_punta_act_pyg ELSE 0 END) AS saldo_cda_act_vencido, SUM(CASE WHEN suma_ant = 'SI' THEN saldo_punta_act_pyg ELSE 0 END) AS saldo_cda_ant_vencido INTO DBO.REPORTE_CDA_TMP FROM DBO.VAR_CDA_TMP GROUP BY nro_cliente;

-- ============================================== -- UNIFICACIÓN FINAL: PASIVOS + CDA (integrado) -- ============================================== DROP TABLE IF EXISTS DBO.A_VAR_PUNTA_PASIVOS_Q_FINAL; SELECT p.*, ISNULL(cda.saldo_cda_act_vencido, 0) AS saldo_cda_act_vencido, ISNULL(cda.saldo_cda_ant_vencido, 0) AS saldo_cda_ant_vencido, ISNULL(p.saldo_punta_pyg_act, 0) + ISNULL(cda.saldo_cda_act_vencido, 0) AS saldo_punta_pyg_act_total, ISNULL(p.saldo_punta_pyg_ant, 0) + ISNULL(cda.saldo_cda_ant_vencido, 0) AS saldo_punta_pyg_ant_total, (ISNULL(p.saldo_punta_pyg_act, 0) + ISNULL(cda.saldo_cda_act_vencido, 0)) - (ISNULL(p.saldo_punta_pyg_ant, 0) + ISNULL(cda.saldo_cda_ant_vencido, 0)) AS variacion_total, CASE WHEN (ISNULL(p.saldo_punta_pyg_act, 0) + ISNULL(cda.saldo_cda_act_vencido, 0)) - (ISNULL(p.saldo_punta_pyg_ant, 0) + ISNULL(cda.saldo_cda_ant_vencido, 0)) > 0 THEN 'Aumentó' WHEN (ISNULL(p.saldo_punta_pyg_act, 0) + ISNULL(cda.saldo_cda_act_vencido, 0)) - (ISNULL(p.saldo_punta_pyg_ant, 0) + ISNULL(cda.saldo_cda_ant_vencido, 0)) < 0 THEN 'Disminuyó' ELSE 'Mantiene' END AS desc_variacion_total INTO DBO.A_VAR_PUNTA_PASIVOS_Q_FINAL FROM DBO.A_VAR_PUNTA_PASIVOS_Q p LEFT JOIN DBO.REPORTE_CDA_TMP cda ON p.nro_cliente = cda.nro_cliente;

-- ============================================== -- INTEGRACIÓN CDA: Saldos Vencidos del mes actual y anterior -- ==============================================

-- Conversión a guaraníes y marca de vencimiento para CDA actual DROP TABLE IF EXISTS DBO.A_Cant_CDA_FINAL; SELECT *, CASE WHEN id_moneda = 6900 THEN t_saldo_punta WHEN id_moneda = 1 THEN t_saldo_punta * tipo_cambio WHEN id_moneda = 62 THEN t_saldo_punta * tipo_cambio_eu ELSE 0 END AS saldo_punta_act_pyg, CASE WHEN fecha_vto <= @FECHA_CIERRE THEN 'SI' ELSE 'NO' END AS suma INTO DBO.A_Cant_CDA_FINAL FROM DBO.A_Cant_CDA_TMP;

-- Conversión a guaraníes y marca de vencimiento para CDA anterior DROP TABLE IF EXISTS DBO.A_Cant_CDA_FINAL_ANT; SELECT *, CASE WHEN id_moneda = 6900 THEN t_saldo_punta WHEN id_moneda = 1 THEN t_saldo_punta * tipo_cambio WHEN id_moneda = 62 THEN t_saldo_punta * tipo_cambio_eu ELSE 0 END AS saldo_punta_act_pyg, CASE WHEN fecha_vto <= @FECHA_ANT THEN 'SI' ELSE 'NO' END AS suma INTO DBO.A_Cant_CDA_FINAL_ANT FROM DBO.A_Cant_CDA_TMP_ANT;

-- Comparación CDA por cliente y operación DROP TABLE IF EXISTS DBO.VAR_CDA_TMP; SELECT COALESCE(act.nro_cliente, ant.nro_cliente) AS nro_cliente, COALESCE(act.nombre_cliente, ant.nombre_cliente) AS nombre_cliente, COALESCE(act.nro_operacion, ant.nro_operacion) AS nro_operacion, COALESCE(act.cod_gerente_num, ant.cod_gerente_num) AS cod_gte_actual, COALESCE(act.nombre_gerente, ant.nombre_gerente) AS gerente_actual, ant.cod_gerente_num AS cod_gerente_ant, ant.nombre_gerente AS gerente_ant, ISNULL(act.saldo_punta_act_pyg, 0) AS saldo_punta_act_pyg, ISNULL(ant.saldo_punta_act_pyg, 0) AS saldo_punta_ant_pyg, ISNULL(act.saldo_punta_act_pyg, 0) - ISNULL(ant.saldo_punta_act_pyg, 0) AS variacion, CASE WHEN ISNULL(act.saldo_punta_act_pyg, 0) - ISNULL(ant.saldo_punta_act_pyg, 0) > 0 THEN 'Aumentó' WHEN ISNULL(act.saldo_punta_act_pyg, 0) - ISNULL(ant.saldo_punta_act_pyg, 0) < 0 THEN 'Disminuyó' ELSE 'Mantiene' END AS desc_variacion, act.fecha_cierre AS fecha_cierre_act, ant.fecha_cierre AS fecha_cierre_ant, act.fecha_vto AS fecha_vto_act, ant.fecha_vto AS fecha_vto_ant, act.suma AS suma_act, ant.suma AS suma_ant INTO DBO.VAR_CDA_TMP FROM DBO.A_Cant_CDA_FINAL act FULL OUTER JOIN DBO.A_Cant_CDA_FINAL_ANT ant ON act.nro_cliente = ant.nro_cliente AND act.nro_operacion = ant.nro_operacion;

-- Consolidado de saldos vencidos CDA por cliente DROP TABLE IF EXISTS DBO.REPORTE_CDA_TMP; SELECT nro_cliente, SUM(CASE WHEN suma_act = 'SI' THEN saldo_punta_act_pyg ELSE 0 END) AS saldo_cda_act_vencido, SUM(CASE WHEN suma_ant = 'SI' THEN saldo_punta_act_pyg ELSE 0 END) AS saldo_cda_ant_vencido INTO DBO.REPORTE_CDA_TMP FROM DBO.VAR_CDA_TMP GROUP BY nro_cliente;

-- ============================================== -- UNIFICACIÓN FINAL: PASIVOS + CDA (integrado) -- ============================================== DROP TABLE IF EXISTS DBO.A_VAR_PUNTA_PASIVOS_Q_FINAL; SELECT p.*, ISNULL(cda.saldo_cda_act_vencido, 0) AS saldo_cda_act_vencido, ISNULL(cda.saldo_cda_ant_vencido, 0) AS saldo_cda_ant_vencido, ISNULL(p.saldo_punta_pyg_act, 0) + ISNULL(cda.saldo_cda_act_vencido, 0) AS saldo_punta_pyg_act_total, ISNULL(p.saldo_punta_pyg_ant, 0) + ISNULL(cda.saldo_cda_ant_vencido, 0) AS saldo_punta_pyg_ant_total, (ISNULL(p.saldo_punta_pyg_act, 0) + ISNULL(cda.saldo_cda_act_vencido, 0)) - (ISNULL(p.saldo_punta_pyg_ant, 0) + ISNULL(cda.saldo_cda_ant_vencido, 0)) AS variacion_total, CASE WHEN (ISNULL(p.saldo_punta_pyg_act, 0) + ISNULL(cda.saldo_cda_act_vencido, 0)) - (ISNULL(p.saldo_punta_pyg_ant, 0) + ISNULL(cda.saldo_cda_ant_vencido, 0)) > 0 THEN 'Aumentó' WHEN (ISNULL(p.saldo_punta_pyg_act, 0) + ISNULL(cda.saldo_cda_act_vencido, 0)) - (ISNULL(p.saldo_punta_pyg_ant, 0) + ISNULL(cda.saldo_cda_ant_vencido, 0)) < 0 THEN 'Disminuyó' ELSE 'Mantiene' END AS desc_variacion_total INTO DBO.A_VAR_PUNTA_PASIVOS_Q_FINAL FROM DBO.A_VAR_PUNTA_PASIVOS_Q p LEFT JOIN DBO.REPORTE_CDA_TMP cda ON p.nro_cliente = cda.nro_cliente;

